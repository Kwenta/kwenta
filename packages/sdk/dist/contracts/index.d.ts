import { Contract as EthCallContract } from 'ethcall';
import { Contract, ethers } from 'ethers';
import { NetworkId } from '../types/common';
type ContractFactory = {
    connect: (address: string, provider: ethers.providers.Provider) => Contract;
};
export type AllContractsMap = Record<ContractName, {
    addresses: Partial<Record<NetworkId, string>>;
    Factory: ContractFactory;
}>;
export declare const getPerpsV2MarketMulticall: (marketAddress: string) => EthCallContract;
export declare const getContractsByNetwork: (networkId: NetworkId, provider: ethers.providers.Provider) => {
    Exchanger: import("./types").Exchanger | undefined;
    ExchangeRates: import("./types").ExchangeRates | undefined;
    SystemStatus: import("./types").SystemStatus | undefined;
    SynthUtil: import("./types").SynthUtil | undefined;
    SystemSettings: import("./types").SystemSettings | undefined;
    SynthRedeemer: import("./types").SynthRedeemer | undefined;
    FuturesMarketData: import("./types").FuturesMarketData | undefined;
    PerpsV2MarketData: import("./types").PerpsV2MarketData | undefined;
    PerpsV2MarketSettings: import("./types").PerpsV2MarketSettings | undefined;
    Pyth: import("./types").Pyth | undefined;
    FuturesMarketSettings: import("./types").FuturesMarketSettings | undefined;
    Synthetix: import("./types").Synthetix | undefined;
    SynthSwap: import("./types").SynthSwap | undefined;
    SUSD: import("./types").ERC20 | undefined;
    SmartMarginAccountFactory: import("./types").SmartMarginAccountFactory | undefined;
    KwentaArrakisVault: import("./types").KwentaArrakisVault | undefined;
    StakingRewards: import("./types").StakingRewards | undefined;
    RewardEscrow: import("./types").RewardEscrow | undefined;
    KwentaToken: import("./types").ERC20 | undefined;
    SupplySchedule: import("./types").SupplySchedule | undefined;
    vKwentaToken: import("./types").ERC20 | undefined;
    MultipleMerkleDistributor: import("./types").MultipleMerkleDistributor | undefined;
    MultipleMerkleDistributorPerpsV2: import("./types").MultipleMerkleDistributorPerpsV2 | undefined;
    MultipleMerkleDistributorOp: import("./types").MultipleMerkleDistributorOp | undefined;
    MultipleMerkleDistributorSnxOp: import("./types").MultipleMerkleDistributorOp | undefined;
    BatchClaimer: import("./types").BatchClaimer | undefined;
    veKwentaToken: import("./types").ERC20 | undefined;
    KwentaStakingRewards: import("./types").KwentaStakingRewards | undefined;
    vKwentaRedeemer: import("./types").VKwentaRedeemer | undefined;
    veKwentaRedeemer: import("./types").VeKwentaRedeemer | undefined;
};
export declare const getMulticallContractsByNetwork: (networkId: NetworkId) => {
    SynthRedeemer: EthCallContract | undefined;
    ExchangeRates: EthCallContract | undefined;
    FuturesMarketData: EthCallContract | undefined;
    FuturesMarketSettings: EthCallContract | undefined;
    PerpsV2MarketData: EthCallContract | undefined;
    PerpsV2MarketSettings: EthCallContract | undefined;
    StakingRewards: EthCallContract | undefined;
    KwentaArrakisVault: EthCallContract | undefined;
    RewardEscrow: EthCallContract | undefined;
    KwentaStakingRewards: EthCallContract | undefined;
    KwentaToken: EthCallContract | undefined;
    MultipleMerkleDistributor: EthCallContract | undefined;
    MultipleMerkleDistributorPerpsV2: EthCallContract | undefined;
    MultipleMerkleDistributorOp: EthCallContract | undefined;
    MultipleMerkleDistributorSnxOp: EthCallContract | undefined;
    vKwentaToken: EthCallContract | undefined;
    veKwentaToken: EthCallContract | undefined;
    SupplySchedule: EthCallContract | undefined;
    SystemStatus: EthCallContract | undefined;
    DappMaintenance: EthCallContract | undefined;
};
export type ContractsMap = ReturnType<typeof getContractsByNetwork>;
export type MulticallContractsMap = ReturnType<typeof getMulticallContractsByNetwork>;
export type ContractName = keyof ContractsMap;
export {};
